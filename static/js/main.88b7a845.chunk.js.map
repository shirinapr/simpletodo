{"version":3,"sources":["helper/changeActive.js","reducers/todo.js","reducers/topic.js","reducers/index.js","store.js","components/Modal/index.js","components/List/index.js","components/Form/index.js","components/Task/index.js","helper/extractTopics.js","components/Base/index.js","components/App.js","index.js"],"names":["changeActive","id","array","i","length","active","todoReducer","state","JSON","parse","localStorage","getItem","action","type","payload","newTodo","filter","z","x","currentTopic","allReducers","combineReducers","todo","topicReducer","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","func","stringify","getState","setItem","ModalComp","props","dispatch","useDispatch","activeTodo","useSelector","find","element","useState","date","setDate","defaultValue","text","input","setInput","useEffect","title","visible","onOk","setIsVisible","topic","onCancel","onChange","e","target","value","dateString","Date","_d","ListComp","isVisible","console","log","cancel","message","error","t","Modal","flex","className","bordered","dataSource","sort","a","b","renderItem","item","Item","moment","format","onConfirm","success","setTimeout","handleEdit","okText","cancelText","FormComp","setTopic","Form","useForm","form","inputRef","React","useRef","handleSelect","Option","Select","xl","sm","onFinish","shortId","generate","resetFields","name","xs","rules","required","placeholder","ref","autoComplete","span","md","lg","offset","showSearch","onSearch","htmlType","Task","List","extracter","newarry","undefined","includes","push","Header","Layout","Sider","Content","SiderDemo","collapsed","toggle","setState","handleMenu","items","this","trigger","collapsible","mode","defaultSelectedKeys","icon","UserOutlined","onClick","map","UploadOutlined","style","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","children","Component","connect","Container","Base","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.88b7a845.chunk.js","sourcesContent":["function changeActive(id, array) {\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (array[i].id === id) {\r\n      array[i].active = true;\r\n    } else {\r\n      array[i].active = false;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default changeActive;\r\n","import changeActive from '../helper/changeActive'\r\nconst todoReducer = (\r\n  state = JSON.parse(localStorage.getItem('todo')) || [],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [...state, action.payload]\r\n    case 'EDIT_TODO':\r\n      const newTodo = state.filter((z) => action.payload.id !== z.id)\r\n      return [action.payload, ...newTodo]\r\n    case 'DELETE_TODO':\r\n      return state.filter((x) => action.payload !== x.id)\r\n    case 'ACTIVATE_TODO':\r\n      return [...changeActive(action.payload, [...state])]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todoReducer\r\n","const currentTopic = (state = 'all', action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_TOPIC':\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default currentTopic\r\n","import { combineReducers } from 'redux'\r\nimport todoReducer from './todo'\r\nimport topicReducer from './topic'\r\nconst allReducers = combineReducers({\r\n  todo: todoReducer,\r\n  currentTopic: topicReducer,\r\n})\r\n\r\nexport default allReducers\r\n","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\nconst todo = () => {\r\n  let func = JSON.stringify(store.getState().todo);\r\n  localStorage.setItem('todo', func);\r\n};\r\nstore.subscribe(todo);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Modal, Input, DatePicker } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst ModalComp = (props) => {\r\n  const dispatch = useDispatch()\r\n  const todo = useSelector((state) => state.todo)\r\n  const activeTodo = todo.find((element) => element.active)\r\n\r\n  const [date, setDate] = useState(0)\r\n  const defaultValue = activeTodo ? activeTodo.text : ''\r\n  const [input, setInput] = useState(defaultValue)\r\n\r\n  useEffect(() => {\r\n    setInput(defaultValue)\r\n  }, [defaultValue])\r\n\r\n  const handleOk = () => {\r\n    props.setIsVisible(false)\r\n\r\n    dispatch({\r\n      type: 'EDIT_TODO',\r\n      payload: {\r\n        id: activeTodo.id,\r\n        text: input,\r\n        topic: activeTodo.topic,\r\n        date,\r\n      },\r\n    })\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    props.setIsVisible(false)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value)\r\n  }\r\n\r\n  const onChange = (date, dateString) => {\r\n    if (date !== null) {\r\n      setDate(+new Date(date._d))\r\n    } else {\r\n      setDate(0)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title='Edit'\r\n        visible={props.visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Input onChange={handleChange} value={input}></Input>\r\n        <DatePicker onChange={onChange}></DatePicker>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ModalComp\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport ModalComp from '../Modal'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { List, Button, Popconfirm, message, Row, Col } from 'antd'\r\nimport moment from 'moment'\r\nimport './style.css'\r\n\r\n\r\nconst ListComp = (props) => {\r\n  const dispatch = useDispatch()\r\n  const todo = useSelector((state) => state.todo)\r\n  const [isVisible, setIsVisible] = useState(false)\r\n  const currentTopic = useSelector((state) => state.currentTopic)\r\n  useEffect(() => {\r\n    console.log('component changed')\r\n  })\r\n  const handleDelete = (id) => {\r\n    dispatch({\r\n      type: 'DELETE_TODO',\r\n      payload: id,\r\n    })\r\n    message.success('Click on Yes')\r\n  }\r\n\r\n  const handleEdit = (item) => {\r\n    message.success('Succeed') //*\r\n    dispatch({\r\n      type: 'ACTIVATE_TODO',\r\n      payload: item.id,\r\n    })\r\n    setTimeout(() => {\r\n      setIsVisible(true)\r\n    }, 500)\r\n  }\r\n\r\n  function cancel(e) {\r\n    console.log(e)\r\n    message.error('Canceled') //*\r\n  }\r\n  const func = (a, b) => {\r\n    return b.date - a.date\r\n  }\r\n  let newTodo = todo\r\n\r\n  if (currentTopic !== 'all') {\r\n    newTodo = todo.filter((t) => {\r\n      return t.topic === currentTopic\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalComp visible={isVisible} setIsVisible={setIsVisible} />\r\n      <Row>\r\n        <Col flex={2}>\r\n          <List\r\n            className=\"task-list\"\r\n            bordered\r\n            dataSource={newTodo.sort(func)}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                {item.text}\r\n                &nbsp;\r\n                {item.date !== 0 ? moment(item.date).format('ll') : ''}\r\n                &nbsp;\r\n                <Popconfirm\r\n                  title='Are you sure to edit this task?'\r\n                  onConfirm={() => {\r\n                    handleEdit(item)\r\n                  }}\r\n                  onCancel={cancel}\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <Button type='link' className=\"task-btn\">Edit</Button>\r\n                </Popconfirm>\r\n                &nbsp;\r\n                <Popconfirm\r\n                  title='Are you sure to delete this task?'\r\n                  onConfirm={() => {\r\n                    handleDelete(item.id)\r\n                  }}\r\n                  onCancel={cancel}\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <Button type='link' className=\"task-btn\">Delete</Button>\r\n                </Popconfirm>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListComp\r\n","import React, { useState } from 'react'\r\nimport { Input, Form, Button, DatePicker, Select, Row, Col } from 'antd'\r\nimport shortId from 'shortid'\r\nimport { useDispatch } from 'react-redux'\r\nimport './style.css'\r\n\r\n\r\nconst FormComp = () => {\r\n  const dispatch = useDispatch((store) => {\r\n    return store.todo\r\n  })\r\n  const [date, setDate] = useState(0)\r\n  const [topic, setTopic] = useState('')\r\n  const [form] = Form.useForm()\r\n  const inputRef = React.useRef(null)\r\n\r\n  function onChange(date, dateString) {\r\n    if (date !== null) {\r\n      setDate(+new Date(date._d))\r\n    } else {\r\n      setDate(0)\r\n    }\r\n  }\r\n  let handleSelect = (value) => {\r\n    setTopic(value)\r\n  }\r\n  let handleSubmit = (e) => {\r\n    let todo = {\r\n      id: shortId.generate(),\r\n      text: e.todo,\r\n      date,\r\n    }\r\n\r\n    if (topic) {\r\n      todo.topic = topic\r\n    }\r\n    dispatch({\r\n      type: 'ADD_TODO',\r\n      payload: todo,\r\n    })\r\n    form.resetFields()\r\n  }\r\n  const { Option } = Select\r\n  return (\r\n    <Row>\r\n      <Col xl={24} sm={24}>\r\n        <Form onFinish={handleSubmit} name='basic' form={form}>\r\n          <Row className=\"row-form\">          \r\n            <Col xl={6} xs={10} sm={8}>\r\n              <Form.Item\r\n                className=\"txt-input\"\r\n                name='todo'\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please fill input.',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  placeholder='Enter your task'\r\n                  ref={inputRef}\r\n                  autoComplete='off'\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n              \r\n                <Col span={4} md={6} lg={6} xl={4} offset={1}>\r\n                  <Form.Item>\r\n                    <Select\r\n                      showSearch\r\n                      placeholder='Topic'\r\n                      onSearch={handleSelect}\r\n                      onChange={handleSelect}\r\n                    >\r\n                      <Option value='Short term'>Short term</Option>\r\n                      <Option value='Long term'>Long term</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={4} offset={1} className=\"date-input\" >\r\n                  {' '}\r\n                  <DatePicker onChange={onChange}  />\r\n                </Col>\r\n                <Col span={4} md={2 , {offset:0}} sm={{offset:1}} xs={{offset:1}}>\r\n                  <Form.Item>\r\n                    <Button type='primary' htmlType='submit' className=\"btn-sub\">\r\n                      Submit\r\n                    </Button>\r\n                  </Form.Item>\r\n              </Col>\r\n          </Row>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default FormComp\r\n","import React from 'react'\r\n\r\nimport List from '../List'\r\nimport FormComp from '../Form'\r\n\r\nconst Task = () => {\r\n  return (\r\n    <>\r\n      <FormComp />\r\n      <List />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","const extracter = (a) => {\r\n  let newarry = []\r\n  for (let i = 0; i < a.length; i++) {\r\n    if (a[i].topic !== undefined && !newarry.includes(a[i].topic)) {\r\n      newarry.push(a[i].topic)\r\n    }\r\n  }\r\n  return newarry\r\n}\r\nexport default extracter\r\n","import React from 'react'\r\nimport { Layout, Menu } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport extracter from '../../helper/extractTopics'\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons'\r\nimport './style.css'\r\nimport shortId from 'shortid'\r\nconst { Header, Sider, Content } = Layout\r\n\r\nclass SiderDemo extends React.Component {\r\n  state = {\r\n    collapsed: true,\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    })\r\n  }\r\n  handleMenu = (topic) => {\r\n    this.props.dispatch({\r\n      type: 'CHANGE_TOPIC',\r\n      payload: topic,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const items = extracter(this.props.todo)\r\n\r\n    return (\r\n      <Layout>\r\n        <Sider\r\n          className='sider'\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <div className='logo' />\r\n          <Menu className='menu' mode='inline' defaultSelectedKeys={['1']}>\r\n            <Menu.Item\r\n              key={shortId.generate()}\r\n              icon={<UserOutlined />}\r\n              onClick={() => {\r\n                this.handleMenu('all')\r\n              }}\r\n              className='menuItem'\r\n            >\r\n              All\r\n            </Menu.Item>\r\n            {items.map((topic) => (\r\n              <Menu.Item\r\n                key={shortId.generate()}\r\n                onClick={() => {\r\n                  this.handleMenu(topic)\r\n                }}\r\n                icon={<UploadOutlined />}\r\n                className='menuItem'\r\n              >\r\n                {topic}\r\n              </Menu.Item>\r\n            ))}\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className='site-layout'>\r\n          <Header className='site-layout-background' style={{ padding: 0 }}>\r\n            {React.createElement(\r\n              this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n              {\r\n                className: 'trigger',\r\n                onClick: this.toggle,\r\n              }\r\n            )}\r\n            <span className='span-header'>Simple Todo-list</span>\r\n          </Header>\r\n          <Content\r\n            className='site-layout-background'\r\n            style={{\r\n              margin: '24px 16px',\r\n              padding: 24,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n            {this.props.children}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect((store) => {\r\n  return { todo: store.todo }\r\n})(SiderDemo)\r\n","import React from 'react'\r\n\r\nimport Task from './Task'\r\nimport Base from './Base'\r\nimport './style.css'\r\nconst Container = () => (\r\n  <>\r\n    <Base>\r\n      <Task />\r\n    </Base>\r\n  </>\r\n)\r\n\r\nexport default Container\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport 'antd/dist/antd.css'; \n\nReactDOM.render(\n  <Provider store = { store }> <App /> </Provider> ,\n  document.getElementById('root')\n);"],"sourceRoot":""}